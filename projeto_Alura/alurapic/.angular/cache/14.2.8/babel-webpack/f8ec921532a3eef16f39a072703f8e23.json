{"ast":null,"code":"import { Subscriber } from '../Subscriber';\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\n\nexport function ignoreElements() {\n  return function ignoreElementsOperatorFunction(source) {\n    return source.lift(new IgnoreElementsOperator());\n  };\n}\n\nclass IgnoreElementsOperator {\n  call(subscriber, source) {\n    return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n  }\n\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nclass IgnoreElementsSubscriber extends Subscriber {\n  _next(unused) {// Do nothing\n  }\n\n} //# sourceMappingURL=ignoreElements.js.map","map":null,"metadata":{},"sourceType":"module"}