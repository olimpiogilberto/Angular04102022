{"ast":null,"code":"import { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\n\nexport function subscribeOn(scheduler, delay = 0) {\n  return function subscribeOnOperatorFunction(source) {\n    return source.lift(new SubscribeOnOperator(scheduler, delay));\n  };\n}\n\nclass SubscribeOnOperator {\n  constructor(scheduler, delay) {\n    this.scheduler = scheduler;\n    this.delay = delay;\n  }\n\n  call(subscriber, source) {\n    return new SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n  }\n\n} //# sourceMappingURL=subscribeOn.js.map","map":null,"metadata":{},"sourceType":"module"}