{"ast":null,"code":"import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\n\nexport function finalize(callback) {\n  return source => source.lift(new FinallyOperator(callback));\n}\n\nclass FinallyOperator {\n  constructor(callback) {\n    this.callback = callback;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n  }\n\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nclass FinallySubscriber extends Subscriber {\n  constructor(destination, callback) {\n    super(destination);\n    this.add(new Subscription(callback));\n  }\n\n} //# sourceMappingURL=finalize.js.map","map":null,"metadata":{},"sourceType":"module"}