{"ast":null,"code":"import { Subscriber } from '../Subscriber';\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\n\nexport function skip(count) {\n  return source => source.lift(new SkipOperator(count));\n}\n\nclass SkipOperator {\n  constructor(total) {\n    this.total = total;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new SkipSubscriber(subscriber, this.total));\n  }\n\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nclass SkipSubscriber extends Subscriber {\n  constructor(destination, total) {\n    super(destination);\n    this.total = total;\n    this.count = 0;\n  }\n\n  _next(x) {\n    if (++this.count > this.total) {\n      this.destination.next(x);\n    }\n  }\n\n} //# sourceMappingURL=skip.js.map","map":null,"metadata":{},"sourceType":"module"}