{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let SearchComponent = /*#__PURE__*/(() => {\n  class SearchComponent {\n    constructor() {\n      this.onTyping = new EventEmitter();\n      this.value = '';\n      this.debounce = new Subject();\n    }\n\n    ngOnInit() {\n      this.debounce.pipe(debounceTime(300)).subscribe(filter => this.onTyping.emit(filter));\n    }\n\n    ngOnDestroy() {\n      this.debounce.unsubscribe();\n    }\n\n  }\n\n  SearchComponent.ɵfac = function SearchComponent_Factory(t) {\n    return new (t || SearchComponent)();\n  };\n\n  SearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SearchComponent,\n    selectors: [[\"ap-search\"]],\n    inputs: {\n      value: \"value\"\n    },\n    outputs: {\n      onTyping: \"onTyping\"\n    },\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"text-center\", \"mt-3\", \"mb-3\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-search\", \"mr-1\"], [\"type\", \"search\", \"placeholder\", \"search...\", \"autofocus\", \"\", 1, \"rounded\", 3, \"value\", \"keyup\"]],\n    template: function SearchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\");\n        i0.ɵɵelement(2, \"i\", 1);\n        i0.ɵɵelementStart(3, \"input\", 2);\n        i0.ɵɵlistener(\"keyup\", function SearchComponent_Template_input_keyup_3_listener($event) {\n          return ctx.debounce.next($event.target.value);\n        });\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"value\", ctx.value);\n      }\n    },\n    encapsulation: 2\n  });\n  return SearchComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}